<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 09 Sep 2024 00:32:47 GMT</lastBuildDate><item><title><![CDATA[A Bootiful Podcast: S?bastien Deleuze on Spring Framework and Kotlin, GraalVM, Project Leyden, AppCDS, runtime efficiency, Kotlin, and more]]></title><link>https://spring.io/blog/2024/09/06/a-bootiful-podcast-sebastien-deleuze-on-spring-framework-and-kotlin-graalvm</link><guid isPermaLink="true">https://spring.io/blog/2024/09/06/a-bootiful-podcast-sebastien-deleuze-on-spring-framework-and-kotlin-graalvm</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 06 Sep 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Dive deep into the world of Spring Framework and Kotlin, GraalVM, Project Leyden, AppCDS, runtime efficiency, Kotlin, and more, with the one and only S?bastien Deleuze! From runtime efficiency to all things Kotlin, this episode is packed with expert insights and valuable information. Don&apos;t miss out on this enlightening conversation with a true Spring guru! Tune in now!  #Java #SpringFramework #Kotlin #TechTalks #SpringBoot&lt;/p&gt;
&lt;iframe title=&quot;A Bootiful Podcast&quot; allowtransparency=&quot;true&quot; height=&quot;315&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);height:315px;&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=zw857-543663-pbblog-playlist&amp;share=1&amp;download=1&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;rtl=0&amp;logo_link=&amp;btn-skin=7&amp;size=315&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - September 3rd, 2024]]></title><link>https://spring.io/blog/2024/09/03/this-week-in-spring-september-3rd-2024</link><guid isPermaLink="true">https://spring.io/blog/2024/09/03/this-week-in-spring-september-3rd-2024</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 03 Sep 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&apos;s September 3rd, and I&apos;m still buzzing from the last week&apos;s SpringOne extravaganza! Also: I&apos;m tired. Last week was nuts. I&apos;m super glad it happened, but I&apos;m tired. And also buzzing. You know? Surely you don&apos;t. I hope not lol. It&apos;s confusing. I feel like I am still &quot;on,&quot; like there&apos;s work to be done for SpringOne. But I think I also appreciate that it&apos;s in the rear view window and it&apos;s time to focus on what&apos;s ahead: Asia! This Friday, I head to Korea, then Japan, then India, and then (not yet confirmed) China. Pay attention to joshlong.com for details as they become clearer. I think, for example, that I&apos;ll be doing a Java User Group in Delhi, India.&lt;/p&gt;
&lt;p&gt;We&apos;ve got a ton of cool stuff to look at this week, so let&apos;s dive right into it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in last week&apos;s installment of &lt;em&gt;This Week in Spring&lt;/em&gt;, I talk to &lt;a href=&quot;https://spring.io/blog/2024/08/30/a-bootiful-podcast-tanzus-cloud-and-spring-legend-chris-sterling&quot;&gt;Tanzu and Spring legend Chris Sterling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I &lt;em&gt;love&lt;/em&gt; this blog by the Spring team&apos;s own &lt;a href=&quot;&quot;&gt;S?bastien Deleuze on CDS support and Project Leyden in Spring Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Craig Walls, author of the upcoming &lt;em&gt;Spring AI In Action&lt;/em&gt;, just updated his source code to reflect &lt;a href=&quot;https://x.com/habuma/status/1829994523084169304?s=12&quot;&gt;some of Spring AI M2&apos;s new observability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zdnet.co.kr/view/?no=20240827091141&quot;&gt;Did I mention I&apos;ll be speaking in Korea?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I am starting to read &lt;em&gt;Stratopheric&lt;/em&gt;, too, and want to &lt;a href=&quot;https://x.com/mnhocktweets/status/1829130670167191563?s=12&quot;&gt;second Martin Hock&apos;s endorsement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java language architect Brian Goetz does an amazing job looking at where we are, and where we&apos;re going, &lt;a href=&quot;https://www.youtube.com/embed/IF9l8fYfSnI&quot;&gt;with Project Valhalla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nice! &lt;code&gt;htmx-spring-boot&lt;/code&gt; is now &lt;a href=&quot;https://x.com/wimdeblauwe/status/1825914232002519502?s=61&quot;&gt;on the Spring Initializr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the new release of &lt;a href=&quot;https://x.com/odrotbohm/status/1823455882476220635?s=12&quot;&gt;Spring Modulith supports nested modules!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I loved this discussion &lt;a href=&quot;https://thenewstack.io/vmwares-golden-path/&quot;&gt;with Tanzu CTO James Watters in which he discusses VMWare&apos;s &quot;golden path.&quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Have you checked out the &lt;a href=&quot;https://www.infoq.com/news/2024/08/jspecify-java-nullability/&quot;&gt;JSPecify annotations - a  new set of annotations to describe nullability semantics&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Tanzu's Cloud and Spring legend Chris Sterling]]></title><link>https://spring.io/blog/2024/08/30/a-bootiful-podcast-tanzus-cloud-and-spring-legend-chris-sterling</link><guid isPermaLink="true">https://spring.io/blog/2024/08/30/a-bootiful-podcast-tanzus-cloud-and-spring-legend-chris-sterling</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 30 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment I talk to the Tanzu legend Chris Sterling, who works on making Spring an even more valuable part of a platform. (This episode was recorded live at the &lt;a href=&quot;https://springone.io&quot;&gt;epic SpringOne&lt;/a&gt; 2024 event!)&lt;/p&gt;
&lt;iframe title=&quot;Tanzu¡¯s Cloud and Spring legend Chris Sterling&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);height:150px;&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=ia2p5-16ba6bb-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Spring Boot CDS support and Project Leyden anticipation]]></title><link>https://spring.io/blog/2024/08/29/spring-boot-cds-support-and-project-leyden-anticipation</link><guid isPermaLink="true">https://spring.io/blog/2024/08/29/spring-boot-cds-support-and-project-leyden-anticipation</guid><dc:creator><![CDATA[S?bastien Deleuze]]></dc:creator><pubDate>Thu, 29 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;How can Spring Boot developers improve the runtime efficiency of their applications with minimal constraints in order to enjoy those benefits on most applications? The answer is the CDS support introduced by Spring Boot 3.3 which allows you to start your Spring Boot applications faster and consume less memory. It is based on &lt;a href=&quot;https://spring.io/blog/2023/12/04/cds-with-spring-framework-6-1&quot;&gt;the foundation introduced by Spring Framework 6.1&lt;/a&gt; that I presented a few months ago.&lt;/p&gt;
&lt;p&gt;A key point is that this new CDS support provides a different value proposition compared to the &lt;a href=&quot;https://docs.spring.io/spring-boot/reference/packaging/native-image/introducing-graalvm-native-images.html&quot;&gt;GraalVM native image support&lt;/a&gt;: the improvements you get with CDS are less dramatic than with native images on startup time for example, but they are still very significant while you can continue to use your regular JVM with very few side effects.&lt;/p&gt;
&lt;p&gt;Spring Boot supports both CDS and GraalVM native images in a production-ready fashion and gives you the choice depending on your context and opinions.&lt;/p&gt;
&lt;h2 id=&quot;cds-a-hidden-gem-in-the-jvm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#cds-a-hidden-gem-in-the-jvm&quot; aria-label=&quot;cds a hidden gem in the jvm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CDS, a hidden gem in the JVM&lt;/h2&gt;
&lt;p&gt;CDS stands for &lt;a href=&quot;https://docs.oracle.com/en/java/javase/21/vm/class-data-sharing.html&quot;&gt;Class Data Sharing&lt;/a&gt;, it is a mature technology already available and used in most JVM, but so far not at its full potential. To simplify, you are probably already using CDS without knowing it but only for optimizing JDK classes loading, while the classes of your application or libraries probably do not take advantage of it. To unlock that, it is required to perform a training run of your application.&lt;/p&gt;
&lt;p&gt;You also need to fulfill a set of constraints that are easy to break without a dedicated support like Spring Boot one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The very same JVM must be used.&lt;/li&gt;
&lt;li&gt;The classpath must be specified as a list of JARs, and avoid the usage of directories, &lt;code&gt;*&lt;/code&gt; wildcard characters and nested JARs.&lt;/li&gt;
&lt;li&gt;The timestamps of the JARs must be preserved.&lt;/li&gt;
&lt;li&gt;When using the CDS archive for the production run, the classpath must be the same as the one used to create the archive, in the same order. Additional JARs or directories can be specified at the end (but won¡¯t be cached).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring Boot 3.3 unlocks this potential by providing 2 new features: &lt;a href=&quot;https://docs.spring.io/spring-boot/reference/packaging/class-data-sharing.html&quot;&gt;self-extracting executable JAR&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-boot/how-to/class-data-sharing.html&quot;&gt;Buildpacks CDS support&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;self-extracting-executable-jar&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#self-extracting-executable-jar&quot; aria-label=&quot;self extracting executable jar permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-extracting executable JAR&lt;/h2&gt;
&lt;p&gt;Directly running &lt;code&gt;java -jar my-app.jar&lt;/code&gt; with the executable JAR is not the most efficient way to run your application on production. This is &lt;a href=&quot;https://docs.spring.io/spring-boot/reference/packaging/efficient.html&quot;&gt;documented&lt;/a&gt; but most developers and operators not using Buildpacks miss that based on various discussions I had with the Spring community. And until recently, there was no real first-class feature to help.&lt;/p&gt;
&lt;p&gt;Spring Boot 3.3 changes that and introduces the capability for an executable JAR to self-extract without requiring any external tool, just with the java command likely already available to run the application:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -Djarmode=tools -jar my-app.jar extract --destination application
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/I1Q9dORIrQbTVDxcG55mT/754c4e055ef33e28983361833f97de3c/cds-layout.png&quot; alt=&quot;CDS file layout&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can then run your Spring Boot application more efficiently with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -jar application/my-app.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This feature has a superpower: it has been designed to fulfill CDS (and Project Leyden) constraints. So combined with Spring Framework support for CDS training runs, you can create a CDS archive for your Spring Boot application as following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -XX:ArchiveClassesAtExit=application.jsa -Dspring.context.exit=onRefresh -jar application/my-app.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can start your application with CDS enabled with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -XX:SharedArchiveFile=application.jsa -jar application/my-app.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;cds-and-spring-aot-activation-support-in-buildpacks&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#cds-and-spring-aot-activation-support-in-buildpacks&quot; aria-label=&quot;cds and spring aot activation support in buildpacks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CDS and Spring AOT activation support in Buildpacks&lt;/h2&gt;
&lt;p&gt;The self-extracting executable JAR feature combined with CDS usage is flexible but still requires quite a lot of manual steps, so Spring Boot and Buildpacks provide integrated support for CDS which:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performs automatically the training run when creating the container image.&lt;/li&gt;
&lt;li&gt;Extract the Spring Boot executable JAR to the CDS friendly file layout mentioned above.&lt;/li&gt;
&lt;li&gt;Ship the CDS archive within the container.&lt;/li&gt;
&lt;li&gt;Automatically enable CDS when running the container image.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/3l0bqmaHOdy4ombbR9D4gU/ebb6e31307cb5a2e44bfec7711d350ad/cds-buildpacks.png&quot; alt=&quot;Buildpacks CDS support&quot;&gt;&lt;/p&gt;
&lt;p&gt;As demonstrated in the &lt;a href=&quot;https://github.com/sdeleuze/spring-boot-cds-demo&quot;&gt;https://github.com/sdeleuze/spring-boot-cds-demo&lt;/a&gt; repository, it can be enabled as following with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;tasks.named(&quot;bootBuildImage&quot;) {
	environment[&quot;BP_JVM_CDS_ENABLED&quot;] = &quot;true&quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or with Maven:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;plugin&gt;
	&amp;#x3C;groupId&gt;org.springframework.boot&amp;#x3C;/groupId&gt;
	&amp;#x3C;artifactId&gt;spring-boot-maven-plugin&amp;#x3C;/artifactId&gt;
	&amp;#x3C;configuration&gt;
		&amp;#x3C;image&gt;
			&amp;#x3C;env&gt;
				&amp;#x3C;BP_JVM_CDS_ENABLED&gt;true&amp;#x3C;/BP_JVM_CDS_ENABLED&gt;
			&amp;#x3C;/env&gt;
		&amp;#x3C;/image&gt;
	&amp;#x3C;/configuration&gt;
&amp;#x3C;/plugin&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;During the training run, the Spring beans are instantiated without starting the Spring lifecycle, so in practice the main side effect you may observe is early database interactions which can be avoided by configuring your application (or just the training run with the &lt;code&gt;CDS_TRAINING_JAVA_TOOL_OPTIONS&lt;/code&gt; environment variable) to prevent such database interaction as documented &lt;a href=&quot;https://github.com/spring-projects/spring-lifecycle-smoke-tests/tree/main#training-run-configuration&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is also possible to trigger Spring AOT activation support with the &lt;code&gt;BP_SPRING_AOT_ENABLED&lt;/code&gt; environment variable but make sure to have those constraints in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable Spring AOT in your Maven or Gradle build.&lt;/li&gt;
&lt;li&gt;Potentially configure Spring AOT to use the Spring profile that will be used in the deployment environment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CDS_TRAINING_JAVA_TOOL_OPTIONS&lt;/code&gt; and &lt;code&gt;BP_SPRING_AOT_ENABLED&lt;/code&gt; can¡¯t be combined.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Spring and Buildpacks teams at Broadcom have been collaborating closely to leverage those OSS features and combine them with additional &lt;a href=&quot;https://tanzu.vmware.com/platform&quot;&gt;Tanzu Platform&lt;/a&gt; capabilities in order to provide a first-class CDS support for Cloud Foundry or Kubernetes, allowing for example training run autoconfiguration, making CDS as easy to enable as a flag with no side effects, and more platform-level capabilities are coming.&lt;/p&gt;
&lt;h2 id=&quot;data-points&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#data-points&quot; aria-label=&quot;data points permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data points&lt;/h2&gt;
&lt;p&gt;With a minimal Spring MVC Tomcat application running on a MacBook M2, we observe that the extracted application combined with CDS allows approximately 1.5x faster startup and 16% lower memory consumption compared to running the executable JAR. If we add Spring AOT to the mix, we get approximately 2x faster startup and 27% lower memory consumption.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/7ddooZznyEqu5fkhlB2zWg/381cd85a88adc1195e45cd8014f30f8d/WebMVC_process_startup_time__ms__and_RSS_after_startup__Mb__final.png&quot; alt=&quot;WebMVC process startup time (ms) and RSS after startup (Mb)&quot;&gt;&lt;/p&gt;
&lt;p&gt;We see similar improvements for Petclinic.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/6sLIbWeeIyVKfikEfZSPSr/f11c4e5b2cf8a57d9aec4eb1c4c37005/Petclinic_process_startup_time__ms__and_RSS_after_startup__Mb_.png&quot; alt=&quot;Petclinic process startup time (ms) and RSS after startup (Mb)&quot;&gt;&lt;/p&gt;
&lt;p&gt;The values will obviously change on less powerful cloud instances, but you should likely observe similar improvement ratios.&lt;/p&gt;
&lt;h2 id=&quot;spring-boot-and-project-leyden&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-boot-and-project-leyden&quot; aria-label=&quot;spring boot and project leyden permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Boot and Project Leyden&lt;/h2&gt;
&lt;p&gt;Interestingly, the CDS friendly layout used by the new extract command described above is also designed to provide optimal performance with &lt;a href=&quot;https://jdk.java.net/leyden/&quot;&gt;Project Leyden Early-Access builds&lt;/a&gt; which can be seen as a CDS successor with additional capabilities allowing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Even faster startup.&lt;/li&gt;
&lt;li&gt;Smaller container images (by removing the CDS archive of the JDK to keep only the application one).&lt;/li&gt;
&lt;li&gt;Ahead-Of-Time warmup to have better performance after startup and reach peak performance faster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We observe for now approximately 3x faster startup on Spring Boot applications with Project Leyden and 4x faster startup when combining Project Leyden and Spring AOT.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/29U5DxjYZGkljFG2CF8xH7/99302b221a338c9bc5ff1676d4067c03/Leyden.png&quot; alt=&quot;Project Leyden data points&quot;&gt;&lt;/p&gt;
&lt;p&gt;I will share more in the upcoming &lt;a href=&quot;https://devoxx.be/talk/?id=18479&quot;&gt;Project Leyden talk at Devoxx Belgium 2024&lt;/a&gt; that I will have the pleasure to co-present with Per Minborg from the Java Platform team.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - August 27th, 2024 - SpringOne 2024 edition]]></title><link>https://spring.io/blog/2024/08/27/this-week-in-spring-august-27th-2024-springone-2024-edition</link><guid isPermaLink="true">https://spring.io/blog/2024/08/27/this-week-in-spring-august-27th-2024-springone-2024-edition</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 27 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans, from the expo hall of SpringOne at VMware Explore 2024! There&apos;s  a livestream of some of the  key talks - register and watch for free now at &lt;a href=&quot;https://springone.io&quot;&gt;SpringOne.io&lt;/a&gt;. Right now I&apos;m hanging out at the expo hall manning a booth and doing demos to the hoardes of people streaming by, but I&apos;ll be talking a bit later, too, which, again, you can watch online at &lt;a href=&quot;https://springone.io&quot;&gt;SpringOne.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you can imagine, in the runup to SpringOne, there are a ton of exciting bits to look into, so let&apos;s!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/23/spring-ai-1-0-0-m2-released&quot;&gt;Spring AI 1.0.0 M2 is available now!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-ai-with-nvidia-llm-api&quot;&gt;Spring AI support for NVIDIA LLM API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Good news everybody! &lt;a href=&quot;https://spring.io/blog/2024/08/27/spring-shell-3-2-7-3-3-2-and-3-4-0-m1-are-now-available&quot;&gt;Spring Shell 3.3.7, 3.3.2, and 3.4.0 M1 are now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/23/spring-modulith-1-3-m2-1-2-3-and-1-1-8-released&quot;&gt;Spring Modulith 1.3 M2 and 1.2.3 are available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Spring Boot CVE fixes](&lt;a href=&quot;https://spring.io/blog/2024/08/23/spring-boot-releases-fix-for-cve-2024-38807&quot;&gt;https://spring.io/blog/2024/08/23/spring-boot-releases-fix-for-cve-2024-38807&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/23/structured-logging-in-spring-boot-3-4&quot;&gt;check out this nice blog looking at structured logging in Spring Boot 3.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/23/spring-boot-3-4-0-m2-available-now&quot;&gt;Spring Boot 3.4 M2 now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/23/a-bootiful-podcast-vaadin-developer-advocacy-legend-marcus-hellberg&quot;&gt;In last week&apos;s &lt;em&gt;A Bootiful Podcast&lt;/em&gt;, i talked with Vaadin&apos;s Marcus Hellberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/22/spring-boot-3-3-3-available-now&quot;&gt;Spring Boot 3.3.3 is now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/22/spring-boot-3-2-9-available-now&quot;&gt;Spring Boot 3.2.9 is now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/21/spring-session-3-3-2-and-3-2-5-are-available-now&quot;&gt;Spring Session 3.3.2 and 3.2.5 are available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/21/spring-session-3-4-0-m2-is-available-now&quot;&gt;Spring Session 3.4.0 M2 are available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/21/spring-security-6-4-0-m2-is-available-now&quot;&gt;Spring Security 6.4.0 M2 is available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-for-apache-pulsar-1-2-0-m1-is-now-available&quot;&gt;Spring for Apache Pulsar 1.2.0 M1 is available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-for-apache-pulsar-1-0-9-and-1-1-3-are-now-available&quot;&gt;Spring for Apache Pulsar 1.0.9 and 1.1.3 are now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-security-5-8-14-6-2-6-and-6-3-2-are-available-now&quot;&gt;Spring Security 5.8.14 and 6.3.2 are available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-authorization-server-1-4-0-m1-1-3-2-and-1-2-6-available-now&quot;&gt;Spring Authorization Server 1.4 m1 and 1.3.2 are available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-for-apache-kafka-3-3-0-m2-3-2-3-and-3-1-8-available-now&quot;&gt;Spring for Apache Kafka 3.3.0 M2 is available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2024/08/20/spring-cloud-2024-0-0-m1-aka-mooregate-has-been-released&quot;&gt;Spring Cloud Mooregate now available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Shell 3.2.7, 3.3.2 and 3.4.0-M1 are now available]]></title><link>https://spring.io/blog/2024/08/27/spring-shell-3-2-7-3-3-2-and-3-4-0-m1-are-now-available</link><guid isPermaLink="true">https://spring.io/blog/2024/08/27/spring-shell-3-2-7-3-3-2-and-3-4-0-m1-are-now-available</guid><dc:creator><![CDATA[Janne Valkealahti]]></dc:creator><pubDate>Tue, 27 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I&apos;m happy to announce that Spring Shell &lt;code&gt;3.2.7&lt;/code&gt;, &lt;code&gt;3.3.2&lt;/code&gt; and &lt;code&gt;3.4.0-M1&lt;/code&gt; has been released and are now available from Maven Central and &lt;a href=&quot;https://repo.spring.io/milestone&quot;&gt;Milestone Repo&lt;/a&gt; respectively.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/spring-projects/spring-shell/releases/tag/v3.2.7&quot;&gt;release notes 3.2.7&lt;/a&gt;, &lt;a href=&quot;https://github.com/spring-projects/spring-shell/releases/tag/v3.3.2&quot;&gt;release notes 3.3.2&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-projects/spring-shell/releases/tag/v3.4.0-M1&quot;&gt;release notes 3.4.0-M1&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;h3 id=&quot;how-can-you-help&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-can-you-help&quot; aria-label=&quot;how can you help permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-shell/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-shell&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-shell/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-shell/reference/index.html&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring AI 1.0.0 M2 released]]></title><link>https://spring.io/blog/2024/08/23/spring-ai-1-0-0-m2-released</link><guid isPermaLink="true">https://spring.io/blog/2024/08/23/spring-ai-1-0-0-m2-released</guid><dc:creator><![CDATA[Mark Pollack]]></dc:creator><pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;We are happy to announce the 1.0.0 Milestone 2 release of Spring AI.&lt;/p&gt;
&lt;p&gt;This release brings significant enhancements and new features across various areas.&lt;/p&gt;
&lt;h2 id=&quot;key-focus-observability&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#key-focus-observability&quot; aria-label=&quot;key focus observability permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Focus: Observability&lt;/h2&gt;
&lt;p&gt;A major emphasis for this release has been on observability functionality, crucial for monitoring, debugging, and optimizing AI applications. Comprehensive observability features have been introduced for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ChatClient&lt;/code&gt; (including Advisors)&lt;/li&gt;
&lt;li&gt;Chat Models (OpenAI, Ollama, Mistral, Anthropic)&lt;/li&gt;
&lt;li&gt;Embedding Models&lt;/li&gt;
&lt;li&gt;Image Generation Models&lt;/li&gt;
&lt;li&gt;Vector Stores&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Support for additional &lt;code&gt;ChatModel&lt;/code&gt; implementation will be added in future releases.&lt;/p&gt;
&lt;p&gt;Here are some samples showcasing this functionality to get started&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tzolov/ai-observability-demo&quot;&gt;Observability Demo&lt;/a&gt; from Christian Tzolov&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ThomasVitale/llm-apps-java-spring-ai/tree/main/14-observability&quot;&gt;Observability Demos&lt;/a&gt; from Thomas Vitale&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Grazie mille (a thousand thanks ;) to Thomas Vitale for his significant efforts in contributing to the Observability feature!&lt;/p&gt;
&lt;p&gt;Here is a screenshot showing the tracing of the following code&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var response = chatClient.prompt()
	.user(&quot;How does Carina work?&quot;)
	.advisors(new QuestionAnswerAdvisor(vectorStore, SearchRequest.defaults()))
	.advisors(new PromptChatMemoryAdvisor(chatMemory))
	.call()
	.chatResponse();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;//images.ctfassets.net/mnrwi97vnhts/2hk6LlyJFSL8hlzjGiSMaI/f136ab86696b1b59a5efbf94c8373256/spring-ai-blog-observability3.png&quot; alt=&quot;Grafana view of Spring AI Trace&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the trace view, you can see the nesting of the &lt;code&gt;ChatClient&lt;/code&gt; call which first passes through two advisors, the &lt;code&gt;QuestionAnswerAdvisor&lt;/code&gt; that does an embedding request and a query to the PGVector database.  Then it passes through the &lt;code&gt;PromptChatMemoryAdvisor&lt;/code&gt;, which takes very little time, and then finally to the calling of the OpenAI &lt;code&gt;gpt-4o&lt;/code&gt; model.&lt;/p&gt;
&lt;p&gt;You can find all the details what metrics are available in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/observabilty/index.html&quot;&gt;Observability Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;core-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#core-improvements&quot; aria-label=&quot;core improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/etl-pipeline.html#_markdown&quot;&gt;MarkdownDocumentReader&lt;/a&gt; for ETL pipelines&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; Cassandra-backed &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chatclient.html#_chat_memory&quot;&gt;chat memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; Typesense testcontainer integration&lt;/li&gt;
&lt;li&gt;ChatClient enhancements
&lt;ul&gt;
&lt;li&gt;Function registration with explicit input type&lt;/li&gt;
&lt;li&gt;Dynamic filter expressions for QuestionAnswerAdvisor&lt;/li&gt;
&lt;li&gt;Customizable logger advisor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Improved API design of ResponseMetadata and the Message object hierarchy&lt;/li&gt;
&lt;li&gt;Embedding format changed from List&lt;Double&gt; to float[]&lt;/li&gt;
&lt;li&gt;Added JSON array handling to JsonReader&lt;/li&gt;
&lt;li&gt;Options improvements
&lt;ul&gt;
&lt;li&gt;ChatOptions: Enhanced metadata configuration for defined models&lt;/li&gt;
&lt;li&gt;EmbeddingOptions: Added model and dimensions options&lt;/li&gt;
&lt;li&gt;ImageOptions: Added style option&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ChatOptions added to PromptTemplate create methods&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;chatmodel-enhancements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#chatmodel-enhancements&quot; aria-label=&quot;chatmodel enhancements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ChatModel Enhancements&lt;/h2&gt;
&lt;p&gt;General improvements have been made across the chat model infrastructure classes. Key feature enhancements for specific models include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anthropic: Added Function calling support&lt;/li&gt;
&lt;li&gt;Azure Open AI
&lt;ul&gt;
&lt;li&gt;Function calling integration&lt;/li&gt;
&lt;li&gt;Updated to Azure OpenAI Client library 1.0 beta-10&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/audio/transcriptions/azure-openai-transcriptions.html&quot;&gt;Transcription support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added image handling for byte arrays&lt;/li&gt;
&lt;li&gt;Added Multimodality support&lt;/li&gt;
&lt;li&gt;Added OpenAI API key and MS-Entra authentication options&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Amazon Bedrock: Updated &lt;code&gt;bedrockruntime&lt;/code&gt; version to 2.26.7&lt;/li&gt;
&lt;li&gt;HuggingFace: Added Boot starter&lt;/li&gt;
&lt;li&gt;Minimax
&lt;ul&gt;
&lt;li&gt;Improved function calling&lt;/li&gt;
&lt;li&gt;Added Web search tool support&lt;/li&gt;
&lt;li&gt;Introduced sensitive information masking option&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mistral
&lt;ul&gt;
&lt;li&gt;Added function calling support&lt;/li&gt;
&lt;li&gt;Documentation for using Mistral AI via Spring AI&apos;s OpenAI client&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/moonshot-chat.html&quot;&gt;Moonshot chat model with function calling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ollama
&lt;ul&gt;
&lt;li&gt;Function calling support&lt;/li&gt;
&lt;li&gt;Batch embedding request functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OpenAI
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/moderation/openai-moderation.html&quot;&gt;Moderation API support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updates for partially compliant OpenAI model providers&lt;/li&gt;
&lt;li&gt;Usage statistics for streaming chat responses&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/groq-chat.html&quot;&gt;Groq model provider integration with documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configurable URL paths for Chat and Embedding models&lt;/li&gt;
&lt;li&gt;Documentation for using &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/mistralai-chat.html#_openai_api_compatibility&quot;&gt;Mistral AI&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/nvidia-chat.html&quot;&gt;NVIDIA LLM API&lt;/a&gt; via Spring AI&apos;s OpenAI client&lt;/li&gt;
&lt;li&gt;Parallel function calling support&lt;/li&gt;
&lt;li&gt;Organization ID and Project ID authentication options&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; QianFan model for &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/qianfan-chat.html&quot;&gt;chat&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/embeddings/qianfan-embeddings.html&quot;&gt;embeddings&lt;/a&gt;, and &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/image/qianfan-image.html&quot;&gt;image&lt;/a&gt; generation.&lt;/li&gt;
&lt;li&gt;ONNX - Improved transformer embedding model&lt;/li&gt;
&lt;li&gt;Google Vertex AI
&lt;ul&gt;
&lt;li&gt;Add &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/embeddings/vertexai-embeddings-text.html&quot;&gt;Embedding model&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Updated Google Vertex SDK to 26.41.0&lt;/li&gt;
&lt;li&gt;Resolved parallel function calling&lt;/li&gt;
&lt;li&gt;Added system message support&lt;/li&gt;
&lt;li&gt;Added ResponeMimeType in chat options&lt;/li&gt;
&lt;li&gt;Added Google search retrieval tool support&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ZhiPu: Added function calling support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks for &lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;Geng Rong&lt;/a&gt; for the Moonshot, QianFan, and ZhiPu model support.&lt;/p&gt;
&lt;h2 id=&quot;vector-store-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#vector-store-improvements&quot; aria-label=&quot;vector store improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vector Store improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Breaking Change&lt;/strong&gt;: Default value for vector store configuration property &lt;code&gt;initialize-schema&lt;/code&gt; changed to false.&lt;/li&gt;
&lt;li&gt;Introduced &lt;code&gt;BatchingStrategy&lt;/code&gt; for efficient document embedding operations
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;TokenCountBatchingStrategy&lt;/code&gt; implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cassandra: Added &lt;code&gt;CassandraChatMemory&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chroma:
&lt;ul&gt;
&lt;li&gt;Upgraded from use of &lt;code&gt;RestTemplate&lt;/code&gt; to &lt;code&gt;RestClient&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Integrated ChromaDB&apos;s &lt;code&gt;CHROMA_SERVER_AUTHN_CREDENTIALS&lt;/code&gt; environment variable for Docker Compose and Testcontainers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gemfire: Enhanced functionality&lt;/li&gt;
&lt;li&gt;Milvus: Removed flush operations to prevent excessive segment creation&lt;/li&gt;
&lt;li&gt;MongoDB: Improved efficiency using &lt;code&gt;org.bson.Documents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Neo4j - Updated to latest Cypher-DSL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/vectordbs/opensearch.html&quot;&gt;Opensearch VectorStore implementation&lt;/a&gt;  Thanks &lt;a href=&quot;https://github.com/JM-Lab&quot;&gt;Jemin Huh&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/vectordbs/oracle.html&quot;&gt;Oracle 23ai VectorStore implementation&lt;/a&gt;  Thanks &lt;a href=&quot;https://github.com/loiclefevre&quot;&gt;Lo?c Lef?vre&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;PGVector
&lt;ul&gt;
&lt;li&gt;Introduced customizable schema, table, and index names&lt;/li&gt;
&lt;li&gt;Fixed IN/NOT IN filters for JSON queries&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pinecone
&lt;ul&gt;
&lt;li&gt;Added configurable content and distance metadata fields&lt;/li&gt;
&lt;li&gt;Added AOT hints&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Redis: Enabled use of standard &lt;code&gt;RedisAutoConfiguration&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New:&lt;/strong&gt; &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/vectordbs/typesense.html&quot;&gt;Typesense support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;general-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#general-improvements&quot; aria-label=&quot;general improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General improvements&lt;/h2&gt;
&lt;p&gt;Many refactoring, bug fixing, documentation enhancements across the board by a wide range of contributors. If we haven¡¯t gotten to your PR yet, we will, please be patient. Thanks to&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/N/A&quot;&gt;Mohammed, Ahmed Yousri Salama&lt;/a&gt;, &lt;a href=&quot;https://github.com/AshwinKrishnaK&quot;&gt;Ashwin Krishna K&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlackBean99&quot;&gt;blackbean99&lt;/a&gt;, &lt;a href=&quot;https://github.com/Cho-D-YoungRae&quot;&gt;Youngrae Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/DadySu&quot;&gt;DadySu&lt;/a&gt;, &lt;a href=&quot;https://github.com/Flyingblu&quot;&gt;Jerry (Flyingblu)&lt;/a&gt;, &lt;a href=&quot;https://github.com/Grogdunn&quot;&gt;Lorenzo Caenazzo&lt;/a&gt;, &lt;a href=&quot;https://github.com/JM-Lab&quot;&gt;Jemin Huh&lt;/a&gt;, &lt;a href=&quot;https://github.com/JavaProgrammerLB&quot;&gt;Bill Lau&lt;/a&gt;, &lt;a href=&quot;https://github.com/JayPark7821&quot;&gt;JayPark7821&lt;/a&gt;, &lt;a href=&quot;https://github.com/KAMO030&quot;&gt;KAMOsama&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kirboyyy&quot;&gt;David Caudill&lt;/a&gt;, &lt;a href=&quot;https://github.com/Lee-ChungMu&quot;&gt;Lee-ChungMu&lt;/a&gt;, &lt;a href=&quot;https://github.com/PabloSanchi&quot;&gt;Pablo Sanchi&lt;/a&gt;, &lt;a href=&quot;https://github.com/Seol-JY&quot;&gt;Seol_JY&lt;/a&gt;, &lt;a href=&quot;https://github.com/TarasVovk669&quot;&gt;TarasVovk669&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThomasVitale&quot;&gt;Thomas Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/TimJ0212&quot;&gt;TimJ0212&lt;/a&gt;, &lt;a href=&quot;https://github.com/alexcheng1982&quot;&gt;Fu Cheng&lt;/a&gt;, &lt;a href=&quot;https://github.com/ashni-mongodb&quot;&gt;ashni&lt;/a&gt;, &lt;a href=&quot;https://github.com/bmoussaud&quot;&gt;Benoit Moussaud&lt;/a&gt;, &lt;a href=&quot;https://github.com/chemicL&quot;&gt;Dariusz J?drzejczyk&lt;/a&gt;, &lt;a href=&quot;https://github.com/cocomongg&quot;&gt;cocomongg&lt;/a&gt;, &lt;a href=&quot;https://github.com/cyPark95&quot;&gt;ChanYeong&lt;/a&gt;, &lt;a href=&quot;https://github.com/dafriz&quot;&gt;David Afriz&lt;/a&gt;, &lt;a href=&quot;https://github.com/devholic22&quot;&gt;devholic22&lt;/a&gt;, &lt;a href=&quot;https://github.com/didalgolab&quot;&gt;Mariusz Bernacki&lt;/a&gt;, &lt;a href=&quot;https://github.com/dongfeng3692&quot;&gt;dongfeng3692&lt;/a&gt;, &lt;a href=&quot;https://github.com/dsyer&quot;&gt;Dave Syer&lt;/a&gt;, &lt;a href=&quot;https://github.com/eddumelendez&quot;&gt;Edd? Mel?ndez&lt;/a&gt;, &lt;a href=&quot;https://github.com/elmahdi43&quot;&gt;El Mahdi Oukhamou&lt;/a&gt;, &lt;a href=&quot;https://github.com/fing9&quot;&gt;Seongmin Kim&lt;/a&gt;, &lt;a href=&quot;https://github.com/fjtorres-zerocopy&quot;&gt;Francisco Javier Torres&lt;/a&gt;, &lt;a href=&quot;https://github.com/geetrawat&quot;&gt;geetrawat&lt;/a&gt;, &lt;a href=&quot;https://github.com/habuma&quot;&gt;Craig Walls&lt;/a&gt;, &lt;a href=&quot;https://github.com/hakusai22&quot;&gt;yinpeng&lt;/a&gt;, &lt;a href=&quot;https://github.com/impactCn&quot;&gt;Sinsy&lt;/a&gt;, &lt;a href=&quot;https://github.com/izeye&quot;&gt;Johnny Lim&lt;/a&gt;, &lt;a href=&quot;https://github.com/jo-kim&quot;&gt;jo-kim&lt;/a&gt;, &lt;a href=&quot;https://github.com/joshlong&quot;&gt;Josh Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/jyami-kim&quot;&gt;KimMinjeong&lt;/a&gt;, &lt;a href=&quot;https://github.com/kirkster96&quot;&gt;Cameron Kirk&lt;/a&gt;, &lt;a href=&quot;https://github.com/l-trotta&quot;&gt;Laura Trotta&lt;/a&gt;, &lt;a href=&quot;https://github.com/loiclefevre&quot;&gt;Lo?c Lef?vre&lt;/a&gt;, &lt;a href=&quot;https://github.com/loveysuby&quot;&gt;Hyoseop Song&lt;/a&gt;, &lt;a href=&quot;https://github.com/luocongqiu&quot;&gt;luocq3&lt;/a&gt;, &lt;a href=&quot;https://github.com/michael-simons&quot;&gt;Michael Simons&lt;/a&gt;, &lt;a href=&quot;https://github.com/michaelsembwever&quot;&gt;mck&lt;/a&gt;, &lt;a href=&quot;https://github.com/moon0cean&quot;&gt;Jonatan Soto&lt;/a&gt;, &lt;a href=&quot;https://github.com/muthuishere&quot;&gt;Muthukumaran Navaneethakrishnan&lt;/a&gt;, &lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;Geng Rong&lt;/a&gt;, &lt;a href=&quot;https://github.com/nichozhan&quot;&gt;Nicholas Zhan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ochnios&quot;&gt;Szymon Ochnio&lt;/a&gt;, &lt;a href=&quot;https://github.com/pgerhard&quot;&gt;Philipp Gerhard&lt;/a&gt;, &lt;a href=&quot;https://github.com/piotrooo&quot;&gt;Piotr Olaszewski&lt;/a&gt;, &lt;a href=&quot;https://github.com/rapenumaka&quot;&gt;rapenumaka&lt;/a&gt;, &lt;a href=&quot;https://github.com/rivkode&quot;&gt;rivkode&lt;/a&gt;, &lt;a href=&quot;https://github.com/rozza&quot;&gt;Ross Lawley&lt;/a&gt;, &lt;a href=&quot;https://github.com/rubin0&quot;&gt;Andrea Rubino&lt;/a&gt;, &lt;a href=&quot;https://github.com/sobychacko&quot;&gt;Soby Chacko&lt;/a&gt;, &lt;a href=&quot;https://github.com/status2xx&quot;&gt;xiaoxin&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanvassilev&quot;&gt;Stefan Vassilev&lt;/a&gt;, &lt;a href=&quot;https://github.com/timotheekelly&quot;&gt;Tim Kelly&lt;/a&gt;, &lt;a href=&quot;https://github.com/turchinc&quot;&gt;Chris Turchin&lt;/a&gt;, &lt;a href=&quot;https://github.com/uzhuraul&quot;&gt;uzhuraul&lt;/a&gt;, &lt;a href=&quot;https://github.com/v891&quot;&gt;Veerendra Vellanki&lt;/a&gt;, &lt;a href=&quot;https://github.com/wb04307201&quot;&gt;?ÚÏ&lt;/a&gt;, &lt;a href=&quot;https://github.com/xieyucan&quot;&gt;xiehui1956&lt;/a&gt;, &lt;a href=&quot;https://github.com/xsg22&quot;&gt;xsg22&lt;/a&gt;, &lt;a href=&quot;https://github.com/yeseong0412&quot;&gt;¾ç¿¹¼º&lt;/a&gt;, &lt;a href=&quot;https://github.com/yulshi&quot;&gt;Yulong Shi&lt;/a&gt;, &lt;a href=&quot;https://github.com/zbqmgldjfh&quot;&gt;jiwoo&lt;/a&gt;, &lt;a href=&quot;https://github.com/zlzzlzz2l&quot;&gt;zlzzlzz2l&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Modulith 1.3 M2, 1.2.3, and 1.1.8 released]]></title><link>https://spring.io/blog/2024/08/23/spring-modulith-1-3-m2-1-2-3-and-1-1-8-released</link><guid isPermaLink="true">https://spring.io/blog/2024/08/23/spring-modulith-1-3-m2-1-2-3-and-1-1-8-released</guid><dc:creator><![CDATA[Oliver Drotbohm]]></dc:creator><pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;It is my pleasure to announce the availability of Spring Modulith 1.3 M2, 1.2.3, and 1.1.8. They all contain bug fixes and upgrades to the latest versions of dependencies. Here are the most important features of the releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for nested application modules (1.3 M2 only). See the &lt;a href=&quot;https://docs.spring.io/spring-modulith/reference/1.3/fundamentals.html#modules.nested&quot;&gt;reference documentation&lt;/a&gt; for details. ? &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/issues/578&quot;&gt;GH-578&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event publication completion now issues a by-id query to significantly improve performance and reduce load on the database (1.3 M2 only). ? &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/issues/258&quot;&gt;GH-258&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Minor performance improvements for event completion (all releases). ? &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/issues/749&quot;&gt;GH-749&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For details, please check out the change logs for &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/releases/tag/1.3.0-M2&quot;&gt;1.3 M2&lt;/a&gt;, &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/releases/tag/1.2.3&quot;&gt;1.2.3&lt;/a&gt;, and &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/releases/tag/1.1.8&quot;&gt;1.1.8&lt;/a&gt;. We appreciate any kind of feedback, in particular regarding the milestone release, in the GitHub &lt;a href=&quot;https://github.com/spring-projects/spring-modulith/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Boot Releases Fix for CVE-2024-38807]]></title><link>https://spring.io/blog/2024/08/23/spring-boot-releases-fix-for-cve-2024-38807</link><guid isPermaLink="true">https://spring.io/blog/2024/08/23/spring-boot-releases-fix-for-cve-2024-38807</guid><dc:creator><![CDATA[Andy Wilkinson]]></dc:creator><pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The Spring Boot team has released versions 3.2.9 and 3.3.3 that contain fixes for &lt;a href=&quot;https://spring.io/security/cve-2024-38807&quot;&gt;CVE-2024-38807&lt;/a&gt;, Signature Forgery Vulnerability in Spring Boot&apos;s Loader. For &lt;a href=&quot;https://tanzu.vmware.com/spring&quot;&gt;support&lt;/a&gt; customers, 2.7.22, 3.0.17, and 3.1.13 have also been released.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Boot 2.7.21, 3.0.16, and 3.1.13 available now]]></title><link>https://spring.io/blog/2024/08/23/spring-boot-2-7-21-3-0-16-and-3-1-13-available-now</link><guid isPermaLink="true">https://spring.io/blog/2024/08/23/spring-boot-2-7-21-3-0-16-and-3-1-13-available-now</guid><dc:creator><![CDATA[Andy Wilkinson]]></dc:creator><pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team, I am pleased to announce that Spring Boot 2.7.22, 3.0.17, and 3.1.13 have been released for &lt;a href=&quot;https://tanzu.vmware.com/spring&quot;&gt;support&lt;/a&gt; customers. The releases are available from &lt;a href=&quot;https://packages.broadcom.com&quot;&gt;https://packages.broadcom.com&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot &lt;a href=&quot;https://enterprise.spring.io/projects/spring-boot/changelog/2.7.22&quot;&gt;2.7.22&lt;/a&gt; ships with 17 bug fixes and dependency upgrades.&lt;/li&gt;
&lt;li&gt;Spring Boot &lt;a href=&quot;https://enterprise.spring.io/projects/spring-boot/changelog/3.0.17&quot;&gt;3.0.17&lt;/a&gt; ships with 35 bug fixes and dependency upgrades.&lt;/li&gt;
&lt;li&gt;Spring Boot &lt;a href=&quot;https://enterprise.spring.io/projects/spring-boot/changelog/3.1.13&quot;&gt;3.1.13&lt;/a&gt; ships with 46 bug fixes and dependency upgrades.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The next 2.7.x, 3.0.x, and 3.1.x releases for support customers are planned for 3 months&apos; time.&lt;/p&gt;</content:encoded></item></channel></rss>